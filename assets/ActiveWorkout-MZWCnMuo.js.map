{"version":3,"file":"ActiveWorkout-MZWCnMuo.js","sources":["../../node_modules/@radix-ui/react-progress/node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/@radix-ui/react-progress/node_modules/@radix-ui/react-primitive/dist/index.mjs","../../node_modules/@radix-ui/react-progress/dist/index.mjs","../../src/components/ui/progress.tsx","../../src/features/workouttracker/components/ActiveExerciseCard.tsx","../../src/features/workouttracker/components/ProgressBar.tsx","../../src/features/workouttracker/components/WorkoutTimer.tsx","../../src/features/workouttracker/pages/ActiveWorkout.tsx"],"sourcesContent":["\"use client\";\n\n// src/slot.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenRef = React.isValidElement(children) ? getElementRef(children) : void 0;\n    const ref = useComposedRefs(childrenRef, forwardedRef);\n    if (React.isValidElement(children)) {\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = ref;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/progress.tsx\nimport * as React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PROGRESS_NAME = \"Progress\";\nvar DEFAULT_MAX = 100;\nvar [createProgressContext, createProgressScope] = createContextScope(PROGRESS_NAME);\nvar [ProgressProvider, useProgressContext] = createProgressContext(PROGRESS_NAME);\nvar Progress = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeProgress,\n      value: valueProp = null,\n      max: maxProp,\n      getValueLabel = defaultGetValueLabel,\n      ...progressProps\n    } = props;\n    if ((maxProp || maxProp === 0) && !isValidMaxNumber(maxProp)) {\n      console.error(getInvalidMaxError(`${maxProp}`, \"Progress\"));\n    }\n    const max = isValidMaxNumber(maxProp) ? maxProp : DEFAULT_MAX;\n    if (valueProp !== null && !isValidValueNumber(valueProp, max)) {\n      console.error(getInvalidValueError(`${valueProp}`, \"Progress\"));\n    }\n    const value = isValidValueNumber(valueProp, max) ? valueProp : null;\n    const valueLabel = isNumber(value) ? getValueLabel(value, max) : void 0;\n    return /* @__PURE__ */ jsx(ProgressProvider, { scope: __scopeProgress, value, max, children: /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"aria-valuemax\": max,\n        \"aria-valuemin\": 0,\n        \"aria-valuenow\": isNumber(value) ? value : void 0,\n        \"aria-valuetext\": valueLabel,\n        role: \"progressbar\",\n        \"data-state\": getProgressState(value, max),\n        \"data-value\": value ?? void 0,\n        \"data-max\": max,\n        ...progressProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nProgress.displayName = PROGRESS_NAME;\nvar INDICATOR_NAME = \"ProgressIndicator\";\nvar ProgressIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeProgress, ...indicatorProps } = props;\n    const context = useProgressContext(INDICATOR_NAME, __scopeProgress);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": getProgressState(context.value, context.max),\n        \"data-value\": context.value ?? void 0,\n        \"data-max\": context.max,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nProgressIndicator.displayName = INDICATOR_NAME;\nfunction defaultGetValueLabel(value, max) {\n  return `${Math.round(value / max * 100)}%`;\n}\nfunction getProgressState(value, maxValue) {\n  return value == null ? \"indeterminate\" : value === maxValue ? \"complete\" : \"loading\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isValidMaxNumber(max) {\n  return isNumber(max) && !isNaN(max) && max > 0;\n}\nfunction isValidValueNumber(value, max) {\n  return isNumber(value) && !isNaN(value) && value <= max && value >= 0;\n}\nfunction getInvalidMaxError(propValue, componentName) {\n  return `Invalid prop \\`max\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`;\n}\nfunction getInvalidValueError(propValue, componentName) {\n  return `Invalid prop \\`value\\` of value \\`${propValue}\\` supplied to \\`${componentName}\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\` or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`;\n}\nvar Root = Progress;\nvar Indicator = ProgressIndicator;\nexport {\n  Indicator,\n  Progress,\n  ProgressIndicator,\n  Root,\n  createProgressScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport * as ProgressPrimitive from '@radix-ui/react-progress';\n\nimport { cn } from '@/shared/utils/classMerger';\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        'bg-primary/20 relative h-2 w-full overflow-hidden rounded-full',\n        className,\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  );\n}\n\nexport { Progress };\n","import { useState } from 'react';\r\nimport { IActiveExercise, ISet } from '../types';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n  Checkbox,\r\n  Input,\r\n} from '@/components/ui/';\r\nimport { ChevronUp, ChevronDown, PlusCircle } from 'lucide-react';\r\n\r\ninterface IActiveExerciseCardProps {\r\n  exercise: IActiveExercise;\r\n  exerciseIndex: number;\r\n  onUpdateSet: (\r\n    exerciseIndex: number,\r\n    setIndex: number,\r\n    data: Partial<ISet>,\r\n  ) => void;\r\n  onAddSet: (exerciseIndex: number) => void;\r\n}\r\n\r\nexport const ActiveExerciseCard: React.FC<IActiveExerciseCardProps> = ({\r\n  exercise,\r\n  exerciseIndex,\r\n  onUpdateSet,\r\n  onAddSet,\r\n}) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <CardHeader className=\"pb-2\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <CardTitle className=\"text-lg\">{exercise.name}</CardTitle>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            onClick={() => setExpanded(!expanded)}\r\n            className=\"h-8 w-8 p-0\"\r\n          >\r\n            {expanded ? <ChevronUp size={16} /> : <ChevronDown size={16} />}\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n\r\n      {expanded && (\r\n        <CardContent>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"grid grid-cols-12 text-sm font-medium text-muted-foreground\">\r\n              <div className=\"col-span-1\">Set</div>\r\n              <div className=\"col-span-4\">Weight (kg)</div>\r\n              <div className=\"col-span-4\">Reps</div>\r\n              <div className=\"col-span-3\">Done</div>\r\n            </div>\r\n\r\n            {exercise.sets.map((set, setIndex) => (\r\n              <div key={setIndex} className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-1\">{setIndex + 1}</div>\r\n                <div className=\"col-span-4\">\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={set.weight}\r\n                    onChange={(e) =>\r\n                      onUpdateSet(exerciseIndex, setIndex, {\r\n                        weight: parseFloat(e.target.value) || 0,\r\n                      })\r\n                    }\r\n                    className=\"h-8\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-span-4\">\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={set.reps}\r\n                    onChange={(e) =>\r\n                      onUpdateSet(exerciseIndex, setIndex, {\r\n                        reps: parseInt(e.target.value) || 0,\r\n                      })\r\n                    }\r\n                    className=\"h-8\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-span-3 flex justify-center\">\r\n                  <Checkbox\r\n                    checked={set.isCompleted}\r\n                    onCheckedChange={(checked) =>\r\n                      onUpdateSet(exerciseIndex, setIndex, {\r\n                        isCompleted: checked === true,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => onAddSet(exerciseIndex)}\r\n              className=\"w-full mt-2\"\r\n            >\r\n              <PlusCircle size={16} className=\"mr-1\" /> Add Set\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n","// Src/features/workouttracker/components/WorkoutProgressBar.tsx\r\nimport { Progress } from '@/components/ui';\r\nimport { IWorkoutStats } from '../types';\r\n\r\ninterface IWorkoutProgressBarProps {\r\n  stats: IWorkoutStats;\r\n}\r\n\r\n/**\r\n * Component that displays workout progress as a visual indicator\r\n */\r\nexport const WorkoutProgressBar = ({ stats }: IWorkoutProgressBarProps) => {\r\n  const progressPercentage =\r\n    stats.totalSets > 0\r\n      ? Math.round((stats.totalCompletedSets / stats.totalSets) * 100)\r\n      : 0;\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <span className=\"text-sm font-medium\">\r\n          {stats.totalCompletedSets} of {stats.totalSets} sets completed\r\n        </span>\r\n        <span className=\"text-sm font-medium\">{progressPercentage}%</span>\r\n      </div>\r\n      <Progress value={progressPercentage} className=\"h-2\" />\r\n    </div>\r\n  );\r\n};\r\n","// Src/features/workouttracker/components/WorkoutTimer.tsx\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface IWorkoutTimerProps {\r\n  startTime?: Date;\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Component for displaying elapsed workout time\r\n */\r\nexport const WorkoutTimer = ({\r\n  startTime,\r\n  className = '',\r\n}: IWorkoutTimerProps) => {\r\n  const [elapsedSeconds, setElapsedSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!startTime) return;\r\n\r\n    const calculateElapsed = () => {\r\n      const now = new Date();\r\n      const elapsed = Math.floor((now.getTime() - startTime.getTime()) / 1000);\r\n      setElapsedSeconds(elapsed);\r\n    };\r\n\r\n    // Calculate immediately, then set interval\r\n    calculateElapsed();\r\n\r\n    const timer = setInterval(calculateElapsed, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [startTime]);\r\n\r\n  // Format the time as HH:MM:SS\r\n  const formatTime = (seconds: number) => {\r\n    const hrs = Math.floor(seconds / 3600);\r\n    const mins = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n\r\n    return `${hrs > 0 ? `${hrs}:` : ''}${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className={`text-lg font-mono ${className}`}>\r\n      {startTime ? formatTime(elapsedSeconds) : '00:00'}\r\n    </div>\r\n  );\r\n};\r\n","import { useParams } from 'react-router-dom';\r\nimport { useActiveWorkout } from '../hooks/useActiveWorkout';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { Button } from '@/components/ui/button';\r\nimport { WorkoutTimer } from '../components/WorkoutTimer';\r\nimport { ActiveExerciseCard } from '../components/ActiveExerciseCard';\r\nimport { WorkoutProgressBar } from '../components/ProgressBar';\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n} from '@/components/ui/alert-dialog';\r\nimport { useState } from 'react';\r\n\r\n/**\r\n * Page component for an active workout session\r\n * Shows exercises, sets and allows tracking progress\r\n */\r\nexport const ActiveWorkoutPage = () => {\r\n  const { workoutId } = useParams<{ workoutId: string }>();\r\n  const {\r\n    workout,\r\n    loading,\r\n    error,\r\n    updateSet,\r\n    addSet,\r\n    finishWorkout,\r\n    calculateStats,\r\n  } = useActiveWorkout(workoutId);\r\n  const [isFinishDialogOpen, setIsFinishDialogOpen] = useState(false);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container py-8 space-y-4\">\r\n        <div className=\"flex justify-between\">\r\n          <Skeleton className=\"h-8 w-1/3\" />\r\n          <Skeleton className=\"h-8 w-1/4\" />\r\n        </div>\r\n        <Skeleton className=\"h-4 w-full\" />\r\n        <Skeleton className=\"h-32 w-full\" />\r\n        <Skeleton className=\"h-32 w-full\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !workout) {\r\n    return (\r\n      <div className=\"container py-8\">\r\n        <div className=\"p-4 bg-red-50 text-red-700 rounded-md\">\r\n          <p>Error: {error || 'Workout not found'}</p>\r\n          <Button\r\n            variant=\"outline\"\r\n            className=\"mt-4\"\r\n            onClick={() => window.history.back()}\r\n          >\r\n            Go Back\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const stats = calculateStats();\r\n\r\n  return (\r\n    <div className=\"container py-8\">\r\n      <div className=\"flex flex-col space-y-6\">\r\n        <div className=\"flex flex-wrap justify-between items-center gap-4\">\r\n          <h1 className=\"text-2xl font-bold\">{workout.name}</h1>\r\n          <WorkoutTimer\r\n            startTime={workout.startTime?.toDate()}\r\n            className=\"text-xl font-mono\"\r\n          />\r\n        </div>\r\n\r\n        <WorkoutProgressBar stats={stats} />\r\n\r\n        <div className=\"space-y-4\">\r\n          {workout.exercises.map((exercise, index) => (\r\n            <ActiveExerciseCard\r\n              key={exercise.exerciseId || index}\r\n              exercise={exercise}\r\n              exerciseIndex={index}\r\n              onUpdateSet={updateSet}\r\n              onAddSet={addSet}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"flex justify-center pt-4\">\r\n          <AlertDialog\r\n            open={isFinishDialogOpen}\r\n            onOpenChange={setIsFinishDialogOpen}\r\n          >\r\n            <AlertDialogTrigger asChild>\r\n              <Button size=\"lg\" className=\"px-8\">\r\n                Finish Workout\r\n              </Button>\r\n            </AlertDialogTrigger>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader>\r\n                <AlertDialogTitle>Finish Workout</AlertDialogTitle>\r\n                <AlertDialogDescription>\r\n                  Are you sure you want to finish this workout? This action\r\n                  cannot be undone.\r\n                </AlertDialogDescription>\r\n              </AlertDialogHeader>\r\n              <AlertDialogFooter>\r\n                <AlertDialogCancel>Cancel</AlertDialogCancel>\r\n                <AlertDialogAction onClick={finishWorkout}>\r\n                  Finish\r\n                </AlertDialogAction>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["createSlot","ownerName","SlotClone","createSlotClone","Slot2","React.forwardRef","props","forwardedRef","children","slotProps","childrenArray","React.Children","slottable","isSlottable","newElement","newChildren","child","React.isValidElement","jsx","React.cloneElement","childrenRef","getElementRef","ref","useComposedRefs","props2","mergeProps","React.Fragment","SLOTTABLE_IDENTIFIER","childProps","overrideProps","propName","slotPropValue","childPropValue","args","result","element","getter","_a","mayWarn","_b","NODES","Primitive","primitive","node","Slot","Node","asChild","primitiveProps","Comp","PROGRESS_NAME","DEFAULT_MAX","createProgressContext","createProgressScope","createContextScope","ProgressProvider","useProgressContext","Progress","__scopeProgress","valueProp","maxProp","getValueLabel","defaultGetValueLabel","progressProps","isValidMaxNumber","getInvalidMaxError","max","isValidValueNumber","getInvalidValueError","value","valueLabel","isNumber","getProgressState","INDICATOR_NAME","ProgressIndicator","indicatorProps","context","maxValue","propValue","componentName","Root","Indicator","className","ProgressPrimitive.Root","cn","ProgressPrimitive.Indicator","ActiveExerciseCard","exercise","exerciseIndex","onUpdateSet","onAddSet","expanded","setExpanded","useState","jsxs","Card","CardHeader","CardTitle","Button","ChevronUp","ChevronDown","CardContent","set","setIndex","Input","e","Checkbox","checked","PlusCircle","WorkoutProgressBar","stats","progressPercentage","WorkoutTimer","startTime","elapsedSeconds","setElapsedSeconds","useEffect","calculateElapsed","elapsed","timer","formatTime","seconds","hrs","mins","secs","ActiveWorkoutPage","workoutId","useParams","workout","loading","error","updateSet","addSet","finishWorkout","calculateStats","useActiveWorkout","isFinishDialogOpen","setIsFinishDialogOpen","Skeleton","index","AlertDialog","AlertDialogTrigger","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","AlertDialogFooter","AlertDialogCancel","AlertDialogAction"],"mappings":"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","x_google_ignoreList":[0,1,2]}