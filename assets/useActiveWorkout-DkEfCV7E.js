import{r as l,i as y,u as C,aG as m,Z as i,aH as x,T as v,W as A,aI as b}from"./index-CKYx6VMo.js";const T=d=>{const[e,u]=l.useState(null),[g,h]=l.useState(!0),[k,p]=l.useState(null),{user:o}=y(),f=C();l.useEffect(()=>{(async()=>{if(!(!d||!o))try{h(!0);const t=await b(d);if(!t){p("Workout not found");return}if(t.userId!==o.uid){p("You do not have permission to view this workout");return}u(t)}catch(t){p("Failed to load workout data"),console.error(t)}finally{h(!1)}})()},[d,o]);const S=l.useCallback(async(s,t,a)=>{if(!(!(e!=null&&e.id)||!o))try{const r=[...e.exercises],n=[...r[s].sets];n[t]={...n[t],...a},r[s]={...r[s],sets:n},u(c=>c?{...c,exercises:r}:null),await m(e.id,{exercises:r}),i.success("Set updated")}catch(r){i.error("Failed to update set"),console.error(r)}},[e,o]),E=l.useCallback(async s=>{if(!(!(e!=null&&e.id)||!o))try{const t=[...e.exercises],a=t[s],r=a.sets.length>0?a.sets[a.sets.length-1]:{weight:0,reps:0,isCompleted:!1},n={weight:r.weight,reps:r.reps,isCompleted:!1};t[s]={...a,sets:[...a.sets,n]},u(c=>c?{...c,exercises:t}:null),await m(e.id,{exercises:t}),i.success("Set added")}catch(t){i.error("Failed to add set"),console.error(t)}},[e,o]),W=l.useCallback(async()=>{if(!(!(e!=null&&e.id)||!o))try{if(e.userId!==o.uid){i.error("You do not have permission to complete this workout");return}await x(e.id),i.success("Workout completed!"),u(s=>s?{...s,status:A.COMPLETED,endTime:v.now()}:null),f(`/workout/summary/${e.id}`)}catch(s){if(s instanceof Error){const t=s.message;t.includes("permission")?(i.error("Access denied: You don't have permission to complete this workout"),console.error("Permission error:",s)):(i.error(`Failed to complete workout: ${t}`),console.error("Error completing workout:",s))}else i.error("An unknown error occurred"),console.error("Unknown error:",s)}},[e,o,f]),w=l.useCallback(()=>{if(!e)return{totalSets:0,totalCompletedSets:0,totalReps:0,totalWeight:0,totalExercises:0};let s=0,t=0,a=0,r=0;return e.exercises.forEach(n=>{s+=n.sets.length,n.sets.forEach(c=>{c.isCompleted&&(t++,a+=c.reps,r+=c.weight*c.reps)})}),{totalSets:s,totalCompletedSets:t,totalReps:a,totalWeight:r,totalExercises:e.exercises.length}},[e]);return{workout:e,loading:g,error:k,updateSet:S,addSet:E,finishWorkout:W,calculateStats:w}};export{T as u};
//# sourceMappingURL=useActiveWorkout-DkEfCV7E.js.map
