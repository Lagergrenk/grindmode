var q=Object.defineProperty;var I=(n,e,t)=>e in n?q(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var g=(n,e,t)=>I(n,typeof e!="symbol"?e+"":e,t);import{c as R,K as a,M as h,N as c,T as u,Q as v,V as m,W as D,X as y,Y as f,Z as p,_ as E,$ as S,a0 as $,a1 as N}from"./index-D4A55r9M.js";/**
 * @license lucide-react v0.503.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const B=[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M8 12h8",key:"1wcyev"}],["path",{d:"M12 8v8",key:"napkw2"}]],M=R("circle-plus",B);class U{constructor(e){g(this,"collectionName");this.collectionName=e}async add(e,t=!0){if(!e)throw new Error(`Invalid data for ${this.collectionName}`);const o=a(),s=h(c,"users",o,this.collectionName),i=t?{date:u.now(),createdAt:u.now(),updatedAt:u.now()}:{};return(await v(s,{...e,...i})).id}async getAll(e){const t=a();if(!t)throw new Error("User not authenticated");const o=h(c,"users",t,this.collectionName),s=e?m(o,y("date","desc"),D(e)):m(o,y("date","desc"));return(await f(s)).docs.map(r=>({id:r.id,...r.data()}))}async getById(e){if(!e)throw new Error(`Invalid ID for fetching ${this.collectionName}`);try{const t=a();if(!t)throw new Error("User not authenticated");const o=p(c,"users",t,this.collectionName,e),s=await E(o);return s.exists()?{id:s.id,...s.data()}:null}catch(t){return console.error(`Error fetching ${this.collectionName} document ${e}:`,t),null}}async update(e,t){if(!e||!t)throw new Error(`Invalid parameters for update ${this.collectionName}`);const o=a(),s=p(c,"users",o,this.collectionName,e);return await S(s,{...t,updatedAt:u.now()}),!0}async delete(e){if(!e)throw new Error(`Invalid ID for delete ${this.collectionName}`);const t=a(),o=p(c,"users",t,this.collectionName,e);return await $(o),!0}async getByDateRange(e,t,o="date"){if(!e||!t)throw new Error(`Invalid date parameters for ${this.collectionName} date range query`);const s=a(),i=h(c,"users",s,this.collectionName),r=m(i,N(o,">=",u.fromDate(e)),N(o,"<=",u.fromDate(t)),y(o,"desc"));return(await f(r)).docs.map(d=>({id:d.id,...d.data()}))}async getByDate(e,t="date"){const o=new Date(e);o.setHours(0,0,0,0);const s=new Date(e);return s.setHours(23,59,59,999),this.getByDateRange(o,s,t)}async query(e=[],t="date",o="desc",s){const i=a(),r=h(c,"users",i,this.collectionName),w=[...e.map(l=>N(l.field,l.operator,l.value)),y(t,o)];s&&w.push(D(s));const d=m(r,...w);return(await f(d)).docs.map(l=>({id:l.id,...l.data()}))}}export{M as C,U as F};
