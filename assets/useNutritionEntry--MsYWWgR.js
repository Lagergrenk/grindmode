import{a as I,H as C,T as W,J as O,r as s}from"./index-BA0ZVT4u.js";function v(r){return I(r,Date.now())}function x(r,a){const c=C(r),y=C(a);return+c==+y}function H(r){return x(r,v(r))}const K=r=>new Intl.DateTimeFormat("en-US",{month:"short",day:"numeric"}).format(r);function U(r){const[a,c]=r.split(":").map(Number),y=new Date;return y.setHours(a,c,0,0),W.fromDate(y)}function Y(r){return r.toDate().toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}const f=new O("nutrition"),M=async r=>{try{return await f.add(r)}catch(a){throw console.error("Error adding nutrition entry:",a),a}},R=async r=>{try{return await f.getAll(r)}catch(a){return console.error("Error fetching nutrition entries:",a),[]}},j=async r=>{try{return await f.getById(r)}catch(a){return console.error(`Error fetching nutrition entry ${r}:`,a),null}},b=async(r,a)=>{try{return await f.update(r,a)}catch(c){return console.error(`Error updating nutrition entry ${r}:`,c),!1}},V=async r=>{try{return await f.delete(r)}catch(a){return console.error(`Error deleting nutrition entry ${r}:`,a),!1}},q=async r=>{try{return await f.getByDate(r)}catch(a){return console.error("Error fetching nutrition entries by date:",a),[]}},z=async()=>{try{const r=new Date,a=new Date(r);return a.setDate(r.getDate()-7),await f.getByDateRange(a,r)}catch(r){return console.error("Error fetching nutrition summary:",r),[]}},G=r=>{const[a,c]=s.useState([]),[y,S]=s.useState([]),[D,N]=s.useState([]),[$,o]=s.useState(!1),[k,A]=s.useState(0),T=s.useCallback(t=>{if(!t.date)return!1;const e=new Date,n=new Date;n.setDate(e.getDate()-7);const i=t.date.toDate();return i>=n&&i<=e},[]),d=s.useCallback(t=>{t&&(S(e=>e.some(n=>n.id===t.id)?e.map(n=>n.id===t.id?t:n):[t,...e]),T(t)&&N(e=>e.some(n=>n.id===t.id)?e.map(n=>n.id===t.id?t:n):[t,...e]),c(e=>e.some(n=>n.id===t.id)?e.map(n=>n.id===t.id?t:n):[t,...e])),A(e=>e+1)},[T]);s.useEffect(()=>{(async()=>{o(!0);try{const e=await q(r);S(e)}catch(e){console.error("Error fetching nutrition entries by date:",e)}finally{o(!1)}})()},[r]),s.useEffect(()=>{(async()=>{o(!0);try{const e=new Date;new Date().setDate(e.getDate()-7);const i=await z();N(i)}catch(e){console.error("Error fetching weekly nutrition entries:",e)}finally{o(!1)}})()},[k]),s.useEffect(()=>{(async()=>{o(!0);try{const e=await R();c(e)}catch(e){console.error("Error fetching all nutrition entries:",e)}finally{o(!1)}})()},[k]);const h=s.useCallback(()=>{const t=new Set;D.forEach(g=>{if(!g.date)return;const u=g.date.toDate(),l=`${u.getFullYear()}-${u.getMonth()}-${u.getDate()}`;t.add(l)});const e=D.reduce((g,u)=>{var l;return g+(((l=u.dailyTotals)==null?void 0:l.calories)||0)},0),n=D.reduce((g,u)=>{var l;return g+(((l=u.dailyTotals)==null?void 0:l.protein)||0)},0),i=t.size,m=i>0?e/i:0,E=i>0?n/i:0;return{averageCalories:m,averageProtein:E,daysTracked:i}},[D]),w=s.useCallback(()=>{var e,n,i;const t=a.find(m=>{if(!m.date)return!1;const E=m.date.toDate();return H(E)});return{calories:((e=t==null?void 0:t.dailyTotals)==null?void 0:e.calories)||0,protein:((n=t==null?void 0:t.dailyTotals)==null?void 0:n.protein)||0,meals:((i=t==null?void 0:t.meals)==null?void 0:i.length)||0}},[a]),B=s.useMemo(()=>{const t=h();return{today:w(),weekly:{averageCalories:t.averageCalories,averageProtein:t.averageProtein,daysTracked:t.daysTracked}}},[h,w]),F=async t=>{o(!0);try{const e={...t,date:t.date||W.fromDate(r)},n=await M(e);return n?(d(),n):null}catch(e){return console.error("Error adding nutrition entry:",e),null}finally{o(!1)}},L=async(t,e)=>{o(!0);try{return await b(t,e)?(d(),!0):!1}catch(n){return console.error("Error updating nutrition entry:",n),!1}finally{o(!1)}},P=async t=>{o(!0);try{return await V(t)?(d(),!0):!1}catch(e){return console.error("Error deleting nutrition entry:",e),!1}finally{o(!1)}},p=s.useCallback(async(t,e)=>{o(!0);try{return await b(t,{notes:e})?(d(),!0):!1}catch(n){return console.error("Error updating notes:",n),!1}finally{o(!1)}},[d]);return{isLoading:$,allNutritionEntries:a,weeklyNutritionEntries:D,selectedDateNutritionEntries:y,nutritionSummary:B,addEntry:F,updateEntry:L,deleteEntry:P,updateNotes:p,getWeeklySummary:h,getTodayData:w,refreshData:d}};export{Y as a,U as b,M as c,b as d,K as f,j as g,G as u};
//# sourceMappingURL=useNutritionEntry--MsYWWgR.js.map
